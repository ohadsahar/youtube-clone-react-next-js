{"ast":null,"code":"import { GET_ALL_VIDEOS_REQUEST, GET_ALL_VIDEOS_REQUEST_FAIL, GET_ALL_VIDEOS_REQUEST_SUCCESS } from \"../constants/videoConstants\";\nexport var videoReducer = function videoReducer() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {\n    videos: []\n  };\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case GET_ALL_VIDEOS_REQUEST:\n      return {\n        loading: true,\n        videos: []\n      };\n\n    case GET_ALL_VIDEOS_REQUEST_SUCCESS:\n      return {\n        loading: false,\n        videos: action.payload\n      };\n\n    case GET_ALL_VIDEOS_REQUEST_FAIL:\n      return {\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state;\n  }\n};","map":{"version":3,"sources":["/Users/ohadsahar/Documents/Development/OhadProjects/youtube-clone-react-next-js/store/reducers/videoReducer.js"],"names":["GET_ALL_VIDEOS_REQUEST","GET_ALL_VIDEOS_REQUEST_FAIL","GET_ALL_VIDEOS_REQUEST_SUCCESS","videoReducer","state","videos","action","type","loading","payload","error"],"mappings":"AAAA,SAASA,sBAAT,EAAiCC,2BAAjC,EAA8DC,8BAA9D,QAAoG,6BAApG;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAoC;AAAA,MAAnCC,KAAmC,uEAA3B;AAAEC,IAAAA,MAAM,EAAE;AAAV,GAA2B;AAAA,MAAXC,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKP,sBAAL;AACI,aAAO;AAAEQ,QAAAA,OAAO,EAAE,IAAX;AAAiBH,QAAAA,MAAM,EAAE;AAAzB,OAAP;;AACJ,SAAKH,8BAAL;AACI,aAAO;AAAEM,QAAAA,OAAO,EAAE,KAAX;AAAkBH,QAAAA,MAAM,EAAEC,MAAM,CAACG;AAAjC,OAAP;;AACJ,SAAKR,2BAAL;AACI,aAAO;AAAEO,QAAAA,OAAO,EAAE,KAAX;AAAkBE,QAAAA,KAAK,EAAEJ,MAAM,CAACG;AAAhC,OAAP;;AACJ;AACI,aAAOL,KAAP;AARR;AAWH,CAZM","sourcesContent":["import { GET_ALL_VIDEOS_REQUEST, GET_ALL_VIDEOS_REQUEST_FAIL, GET_ALL_VIDEOS_REQUEST_SUCCESS } from \"../constants/videoConstants\";\n\nexport const videoReducer = (state = { videos: [] }, action) => {\n    switch (action.type) {\n        case GET_ALL_VIDEOS_REQUEST:\n            return { loading: true, videos: [] };\n        case GET_ALL_VIDEOS_REQUEST_SUCCESS:\n            return { loading: false, videos: action.payload };\n        case GET_ALL_VIDEOS_REQUEST_FAIL:\n            return { loading: false, error: action.payload };\n        default:\n            return state;\n\n    }\n}"]},"metadata":{},"sourceType":"module"}