{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ohadsahar/Documents/Development/OhadProjects/youtube-clone-react-next-js/components/Videos/Videos.js\";\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Description, Title, VideoIframe, VideoItemWrapper, VideosWrapper } from './StyledVideos';\n\nconst Videos = ({\n  videos\n}) => {\n  const dispatch = useDispatch(); // const videoState = useSelector(state => state.videos);\n  // const { videos } = videoState;\n  // useEffect(() => {\n  //     const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=eminem&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n  //     dispatch(getAllVideos(url));\n  // }, [dispatch])\n  //console.log(videos);\n\n  return (\n    /*#__PURE__*/\n    //         <div className=\"content\" >\n    // {videos.map((video) => (\n    //     <div className=\"video-frame\" key={video.id}>\n    //         <iframe className=\"video\" src={video.src}>\n    //         </iframe>\n    //         <p className=\"title\">{video.title}</p>\n    //         <p className=\"sub-title\">{video.description}</p>\n    //     </div>\n    // ))}\n    // </div >\n    _jsxDEV(VideosWrapper, {\n      children: videos.map(video => (console.log(video === null || video === void 0 ? void 0 : video.src), /*#__PURE__*/_jsxDEV(VideoItemWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(VideoIframe, {\n          children: /*#__PURE__*/_jsxDEV(\"iframe\", {\n            src: video === null || video === void 0 ? void 0 : video.src\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Title, {\n          children: video === null || video === void 0 ? void 0 : video.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Description, {\n          children: video === null || video === void 0 ? void 0 : video.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, video.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this)\n  );\n  {\n    /* {videos.length === 0 ? <h2>Loading...</h2> :\n               (\n                   videos.map(video => (\n                       <div>\n                           {video.id.videoId ? <iframe width=\"200px\" height=\"200px\"\n                               src={`https://www.youtube.com/embed/${video.id.videoId}`}>\n                           </iframe> : (null)}\n                       </div>\n                   )\n                   )\n               )\n           } */\n  }\n};\n\nexport default Videos;","map":{"version":3,"sources":["/Users/ohadsahar/Documents/Development/OhadProjects/youtube-clone-react-next-js/components/Videos/Videos.js"],"names":["React","useDispatch","Description","Title","VideoIframe","VideoItemWrapper","VideosWrapper","Videos","videos","dispatch","map","video","console","log","src","title","description","id"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,EAAsBC,KAAtB,EAA6BC,WAA7B,EAA0CC,gBAA1C,EAA4DC,aAA5D,QAAiF,gBAAjF;;AAGA,MAAMC,MAAM,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAE3B,QAAMC,QAAQ,GAAGR,WAAW,EAA5B,CAF2B,CAG3B;AACA;AAEA;AACA;AACA;AACA;AAEA;;AAEA;AAAA;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAC,aAAD;AAAA,gBACKO,MAAM,CAACE,GAAP,CAAYC,KAAD,KACRC,OAAO,CAACC,GAAR,CAAYF,KAAZ,aAAYA,KAAZ,uBAAYA,KAAK,CAAEG,GAAnB,gBACA,QAAC,gBAAD;AAAA,gCACI,QAAC,WAAD;AAAA,iCACI;AAAQ,YAAA,GAAG,EAAEH,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEG;AAApB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADJ,eAKI,QAAC,KAAD;AAAA,oBAAQH,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAEI;AAAf;AAAA;AAAA;AAAA;AAAA,gBALJ,eAMI,QAAC,WAAD;AAAA,oBAAcJ,KAAd,aAAcA,KAAd,uBAAcA,KAAK,CAAEK;AAArB;AAAA;AAAA;AAAA;AAAA,gBANJ;AAAA,SAAuBL,KAAK,CAACM,EAA7B;AAAA;AAAA;AAAA;AAAA,cAFQ,CAAX;AADL;AAAA;AAAA;AAAA;AAAA;AAXJ;AA4BA;AAAC;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAiB;AAChB,CArDD;;AAuDA,eAAeV,MAAf","sourcesContent":["import React from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Description, Title, VideoIframe, VideoItemWrapper, VideosWrapper } from './StyledVideos';\n\n\nconst Videos = ({ videos }) => {\n\n    const dispatch = useDispatch();\n    // const videoState = useSelector(state => state.videos);\n    // const { videos } = videoState;\n\n    // useEffect(() => {\n    //     const url = `https://youtube.googleapis.com/youtube/v3/search?part=snippet&q=eminem&key=${process.env.REACT_APP_YOUTUBE_API_KEY}`;\n    //     dispatch(getAllVideos(url));\n    // }, [dispatch])\n\n    //console.log(videos);\n\n    return (\n        //         <div className=\"content\" >\n        // {videos.map((video) => (\n        //     <div className=\"video-frame\" key={video.id}>\n        //         <iframe className=\"video\" src={video.src}>\n        //         </iframe>\n        //         <p className=\"title\">{video.title}</p>\n        //         <p className=\"sub-title\">{video.description}</p>\n        //     </div>\n        // ))}\n        // </div >\n        <VideosWrapper>\n            {videos.map((video) => (\n                console.log(video?.src),\n                <VideoItemWrapper key={video.id}>\n                    <VideoIframe>\n                        <iframe src={video?.src}>\n                        </iframe>\n                    </VideoIframe>\n                    <Title>{video?.title}</Title>\n                    <Description>{video?.description}</Description>\n                </VideoItemWrapper>\n            ))}\n        </VideosWrapper>\n\n\n\n    )\n    {/* {videos.length === 0 ? <h2>Loading...</h2> :\n                (\n                    videos.map(video => (\n                        <div>\n                            {video.id.videoId ? <iframe width=\"200px\" height=\"200px\"\n                                src={`https://www.youtube.com/embed/${video.id.videoId}`}>\n                            </iframe> : (null)}\n                        </div>\n                    )\n                    )\n                )\n            } */}\n}\n\nexport default Videos;\n\n"]},"metadata":{},"sourceType":"module"}